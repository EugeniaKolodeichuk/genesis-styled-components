{"version":3,"sources":["services/apiService.js","pages/MoviesPage/StyledMoviesPage.js","pages/MoviesPage/MoviesPage.js"],"names":["BASE_URL","KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchPopularFilms","fetchFilmById","movieId","fetchCast","fetchRewiew","fetchSearchFilms","searchValue","StyledForm","styled","form","StyledInput","input","StyledButton","button","StyledListNoorder","ul","StyledItemsNoorder","li","StyledLink","Link","MoviesPage","location","useLocation","history","useHistory","useState","search","setSearch","value","setValue","query","split","setSearchValue","useEffect","filmsAPI","then","onSubmit","event","preventDefault","trim","push","toast","error","type","autoComplete","autoFocus","placeholder","onChange","e","target","results","length","map","result","to","pathname","id","state","from","original_title","autoClose"],"mappings":"oVAAMA,EAAW,+BACXC,EAAM,mC,SAEGC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,mF,wBAOO,SAASC,IACd,OAAOX,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASa,EAAcC,GAC5B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACad,EADb,wDAKxB,SAASe,EAAUD,GACxB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,oBAKxB,SAASgB,EAAYF,GAC1B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,2BAKxB,SAASiB,EAAiBC,GAC/B,OAAOjB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBkB,M,mKCjCxCC,EAAaC,IAAOC,KAAV,yKASVC,EAAcF,IAAOG,MAAV,sUAmBXC,EAAeJ,IAAOK,OAAV,kjBA2BZC,EAAoBN,IAAOO,GAAV,8EAMjBC,EAAqBR,IAAOS,GAAV,+UAgBlBC,EAAaV,YAAOW,IAAPX,CAAH,8J,OChER,SAASY,IACtB,IAAMC,EAAWC,cACXC,EAAUC,cAEhB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAQT,EAASK,OAAOK,MAAM,KACpC,EAAsCN,mBAASK,EAAM,IAArD,mBAAOxB,EAAP,KAAoB0B,EAApB,KAEAC,qBAAU,WACH3B,GAIL4B,IAA0B5B,GAAa6B,KAAKR,KAC3C,CAACrB,IAkBJ,OACE,eAACC,EAAD,CAAY6B,SAbQ,SAACC,GACrBA,EAAMC,iBAEe,KAAjBV,EAAMW,QAIVhB,EAAQiB,KAAR,wBAA8BZ,IAC9BI,EAAeJ,GACfC,EAAS,KALPY,IAAMC,MAAM,iCASd,UACE,cAAChC,EAAD,CACEiC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAvBgB,SAACC,GACrBnB,EAASmB,EAAEC,OAAOrB,QAuBdA,MAAOA,IAET,cAAChB,EAAD,CAAc+B,KAAK,SAAnB,oBACA,uBAECjB,EAAOwB,UAAYxB,EAAOwB,QAAQC,QACjC,sDAAuB7C,KAIvB,cAACQ,EAAD,UACGY,EAAOwB,SACNxB,EAAOwB,QAAQE,KAAI,SAACC,GAAD,OACjB,cAACrC,EAAD,UACE,cAACE,EAAD,CACEoC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAOG,IAC5BC,MAAO,CAAEC,KAAMrC,IAHnB,SAMGgC,EAAOM,kBAPaN,EAAOG,SAcxC,cAAC,IAAD,CAAgBI,UAAW","file":"static/js/movies-page.4d03e1c9.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"dc1ac22b6d897f0eb3cf1fd1c0f34665\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchPopularFilms() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchFilmById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US&include_image_language=en%2C%20null`\r\n  );\r\n}\r\n\r\nexport function fetchCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchRewiew(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\r\n  );\r\n}\r\n\r\nexport function fetchSearchFilms(searchValue) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchValue}`\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: 50px;\r\n  width: 250px;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: 3px solid #bdbdbd;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  color: #2196f3;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  text-decoration: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 140px;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  border: 3px solid #2196f3;\r\n  padding: 0.6em;\r\n  border-radius: 4px;\r\n  margin: 10px 20px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  background: white;\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background: #2196f3;\r\n    box-shadow: 0 15px 20px #2196f3;\r\n    color: white;\r\n    transform: translateY(-7px);\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const StyledListNoorder = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const StyledItemsNoorder = styled.li`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 15px;\r\n  margin-bottom: 1.5em;\r\n  border: 3px solid #bdbdbd;\r\n  padding: 0.6em;\r\n  border-radius: 4px;\r\n  background: #fefefe8c;\r\n  color: #231f20;\r\n  max-width: 100vw;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  padding: 12px;\r\n  font-weight: 500;\r\n  color: #2a363b;\r\n  font-size: 18px;\r\n`;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as filmsAPI from \"../../services/apiService\";\r\nimport {\r\n  StyledButton,\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledListNoorder,\r\n  StyledItemsNoorder,\r\n  StyledLink,\r\n} from \"./StyledMoviesPage\";\r\n\r\nexport default function MoviesPage() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [search, setSearch] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const query = location.search.split(\"=\");\r\n  const [searchValue, setSearchValue] = useState(query[1]);\r\n\r\n  useEffect(() => {\r\n    if (!searchValue) {\r\n      return;\r\n    }\r\n\r\n    filmsAPI.fetchSearchFilms(searchValue).then(setSearch);\r\n  }, [searchValue]);\r\n\r\n  const changeHandler = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value.trim() === \"\") {\r\n      toast.error(\"Please enter search request!\");\r\n      return;\r\n    }\r\n    history.push(`/movies?query=${value}`);\r\n    setSearchValue(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={submitHandler}>\r\n      <StyledInput\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search films\"\r\n        onChange={changeHandler}\r\n        value={value}\r\n      ></StyledInput>\r\n      <StyledButton type=\"submit\">Search</StyledButton>\r\n      <hr />\r\n\r\n      {search.results && !search.results.length && (\r\n        <h1>{`No results for ${searchValue}`}</h1>\r\n      )}\r\n\r\n      {\r\n        <StyledListNoorder>\r\n          {search.results &&\r\n            search.results.map((result) => (\r\n              <StyledItemsNoorder key={result.id}>\r\n                <StyledLink\r\n                  to={{\r\n                    pathname: `/movies/${result.id}`,\r\n                    state: { from: location },\r\n                  }}\r\n                >\r\n                  {result.original_title}\r\n                </StyledLink>\r\n              </StyledItemsNoorder>\r\n            ))}\r\n        </StyledListNoorder>\r\n      }\r\n\r\n      <ToastContainer autoClose={2000} />\r\n    </StyledForm>\r\n  );\r\n}\r\n"],"sourceRoot":""}